version: "3.8"

services:
  mongo:
    image: mongo:4.2.23
    restart: always
    volumes:
      - ./mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u $MONGODB_USERNAME -p $MONGODB_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - ftripio
    ports:
      - ${MONGODB_PORT}:27017

  mongo-express:
    image: mongo-express:1.0.0-alpha
    restart: always
    profiles:
      - dev
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongo:${MONGODB_PORT}
    networks:
      - ftripio
    depends_on:
      mongo:
        condition: service_healthy

  mariadb:
    image: mariadb:10.7.8-focal
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ftripio
    volumes:
      - ./maria-db-data:/var/lib/mysql
    networks:
      - ftripio
    ports:
      - ${DB_PORT}:3306

  adminer:
    image: adminer:4.8.1-standalone
    profiles:
      - dev
    restart: always
    networks:
      - ftripio
    ports:
      - 8082:8080
    environment:
      ADMINER_DEFAULT_SERVER: mariadb
    depends_on:
      - mariadb

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RMQ_PASSWORD}
    networks:
      - ftripio
      - back-tier
    ports:
      - 5672:5672
      - 15672:15672
      - 15692:15692
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
      - ./config/rabbitmq:/etc/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  # playground-service:
  #   image: ftripio/playground-service-dev
  #   restart: always
  #   networks:
  #     - ftripio
  #   ports:
  #     - 5000:80
  #   environment:
  #     JWT_SECRET: ${JWT_SECRET}
  #     HEALTH_CHECK_BASE_PATH: http://playground-service:80
  #     GRAFANA_LOKI_URL: http://loki:3100

  #     MDB_URL: mongo:${MONGODB_PORT}
  #     MDB_USERNAME: ${MONGODB_USERNAME}
  #     MDB_PASSWORD: ${MONGODB_PASSWORD}
  #     MDB_DATABASE: ${PS_MDB_DATABASE}

  #     DB_SERVER: mariadb
  #     DB_PORT: ${DB_PORT}
  #     DB_USER: ${DB_USER}
  #     DB_PASSWORD: ${DB_PASSWORD}
  #     DB_DATABASE: ${PS_MDB_DATABASE}

  #     RMQ_SERVER: rabbitmq
  #     RMQ_PORT: 5672
  #     RMQ_USER: ${RMQ_USER}
  #     RMQ_PASSWORD: ${RMQ_PASSWORD}

  #     # API_PREFIX: ${PS_API_PREFIX}
  #     API_PROXY_URL: http-proxy:3000
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #     mariadb:
  #       condition: service_started

  # user-service:
  #   image: ftripio/user-service-dev
  #   restart: always
  #   networks:
  #     - ftripio
  #   ports:
  #     - 80
  #   environment:
  #     JWT_SECRET: ${JWT_SECRET}

  #     HEALTH_CHECK_BASE_PATH: http://user-service:80
  #     GRAFANA_LOKI_URL: http://loki:3100

  #     DB_SERVER: mariadb
  #     DB_PORT: ${DB_PORT}
  #     DB_USER: ${DB_USER}
  #     DB_PASSWORD: ${DB_PASSWORD}
  #     DB_DATABASE: ${US_DB_DATABASE}

  #     RMQ_SERVER: rabbitmq
  #     RMQ_PORT: 5672
  #     RMQ_USER: ${RMQ_USER}
  #     RMQ_PASSWORD: ${RMQ_PASSWORD}

  #     API_PREFIX: ${US_API_PREFIX}
  #     API_PROXY_URL: http-proxy:3000

  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     mariadb:
  #       condition: service_started

  # notification-service:
  #   image: ftripio/notification-service-dev
  #   restart: always
  #   networks:
  #     - ftripio
  #   ports:
  #     - 80
  #   environment:
  #     JWT_SECRET: ${JWT_SECRET}

  #     HEALTH_CHECK_BASE_PATH: http://notification-service:80
  #     GRAFANA_LOKI_URL: http://loki:3100

  #     MDB_URL: mongo:${MONGODB_PORT}
  #     MDB_USERNAME: ${MONGODB_USERNAME}
  #     MDB_PASSWORD: ${MONGODB_PASSWORD}
  #     MDB_DATABASE: ${NS_MDB_DATABASE}

  #     RMQ_SERVER: rabbitmq
  #     RMQ_PORT: 5672
  #     RMQ_USER: ${RMQ_USER}
  #     RMQ_PASSWORD: ${RMQ_PASSWORD}

  #     API_PREFIX: ${NS_API_PREFIX}
  #     API_PROXY_URL: http-proxy:3000

  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy

  # email-service:
  #   image: ftripio/email-service-dev
  #   restart: always
  #   networks:
  #     - ftripio
  #   ports:
  #     - 80
  #   environment:
  #     HEALTH_CHECK_BASE_PATH: http://email-service:80
  #     GRAFANA_LOKI_URL: http://loki:3100

  #     MDB_URL: mongo:${MONGODB_PORT}
  #     MDB_USERNAME: ${MONGODB_USERNAME}
  #     MDB_PASSWORD: ${MONGODB_PASSWORD}
  #     MDB_DATABASE: ${ES_MDB_DATABASE}

  #     RMQ_SERVER: rabbitmq
  #     RMQ_PORT: 5672
  #     RMQ_USER: ${RMQ_USER}
  #     RMQ_PASSWORD: ${RMQ_PASSWORD}

  #     SMTP_HOST: ${SMTP_HOST}
  #     SMTP_PORT: ${SMTP_PORT}
  #     SMTP_USERNAME: ${SMTP_USERNAME}
  #     SMTP_PASSWORD: ${SMTP_PASSWORD}

  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy

  # realtime-communication-service:
  #   image: ftripio/realtime-communication-service-dev
  #   restart: always
  #   networks:
  #     - ftripio
  #   ports:
  #     - 80
  #   environment:
  #     JWT_SECRET: ${JWT_SECRET}

  #     HEALTH_CHECK_BASE_PATH: http://realtime-communication-service:80
  #     GRAFANA_LOKI_URL: http://loki:3100

  #     RMQ_SERVER: rabbitmq
  #     RMQ_PORT: 5672
  #     RMQ_USER: ${RMQ_USER}
  #     RMQ_PASSWORD: ${RMQ_PASSWORD}

  #     API_PROXY_URL: http-proxy:3000

  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy

  http-proxy:
    image: nginx:stable-alpine3.17-slim
    volumes:
      - ./config/proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ftripio
    ports:
      - 4001:80
    # depends_on:
    # - playground-service
    # - user-service
    # - notification-service
    # - realtime-communication-service

  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    expose:
      - 9090
    links:
      - cadvisor:cadvisor
    depends_on:
      - cadvisor
    networks:
      - back-tier

  node-exporter:
    image: prom/node-exporter
    expose:
      - 9100
    networks:
      - back-tier

  cadvisor:
    image: gcr.io/cadvisor/cadvisor-arm64:v0.47.0
    volumes:
      - /:/rootfs:ro
      # - /var/run:/var/run:rw !!!!!!!!! TODO - FOR WINDOWS
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    networks:
      - back-tier

  grafana:
    image: grafana/grafana:9.5.2
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_started
    ports:
      - 4000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/dashboards
    env_file:
      - config.monitoring
    networks:
      - back-tier
      - front-tier

  loki:
    image: grafana/loki:main-5206e3a
    networks:
      - back-tier
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: wget -q --tries=1 -O- http://loki:3100/ready
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge
  ftripio:
    name: ftripio
    driver: bridge
